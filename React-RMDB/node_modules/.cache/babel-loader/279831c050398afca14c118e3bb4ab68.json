{"ast":null,"code":"var _jsxFileName = \"/Users/zengzhuoran/Desktop/project/React-RMDB/src/components/elements/MovieInfo/MovieInfo.js\";\nimport React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\nimport PropTypes from \"prop-types\";\n\nconst MovieInfo = ({\n  movie,\n  directors\n}) => React.createElement(\"div\", {\n  className: \"rmdb-movieinfo\",\n  style: {\n    background: movie.backdrop_path ? \"url('\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(movie.backdrop_path, \"')\") : \"#000\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"rmdb-movieinfo-content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"rmdb-movieinfo-thumb\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(MovieThumb, {\n  image: movie.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(movie.poster_path) : \"./images/no_image.jpg\",\n  clickable: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"rmdb-movieinfo-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, movie.title), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, \"PLOT\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, movie.overview), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \"IMDB RATING\"), React.createElement(\"div\", {\n  className: \"rmdb-rating\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(\"meter\", {\n  min: \"0\",\n  max: \"100\",\n  optimum: \"100\",\n  low: \"40\",\n  high: \"70\",\n  value: movie.vote_average * 10,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(\"p\", {\n  className: \"rmdb-score\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, movie.vote_average)), directors.length > 1 ? React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"DIRECTORS\") : React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"DIRECTOR\"), directors.map((element, i) => {\n  return React.createElement(\"p\", {\n    key: i,\n    className: \"rmdb-director\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, element.name);\n}), React.createElement(FontAwesome, {\n  className: \"fa-film\",\n  name: \"film\",\n  size: \"5x\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}))));\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  drectors: PropTypes.array\n};\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/zengzhuoran/Desktop/project/React-RMDB/src/components/elements/MovieInfo/MovieInfo.js"],"names":["React","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","FontAwesome","MovieThumb","PropTypes","MovieInfo","movie","directors","background","backdrop_path","poster_path","title","overview","vote_average","length","map","element","i","name","propTypes","object","drectors","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,aAAtC,QAA2D,iBAA3D;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAChB;AACE,EAAA,SAAS,EAAC,gBADZ;AAEE,EAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEF,KAAK,CAACG,aAAN,kBACAV,cADA,SACiBE,aADjB,SACiCK,KAAK,CAACG,aADvC,UAER;AAHC,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAQE;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,UAAD;AACE,EAAA,KAAK,EACHH,KAAK,CAACI,WAAN,aACOX,cADP,SACwBC,WADxB,SACsCM,KAAK,CAACI,WAD5C,IAEI,uBAJR;AAME,EAAA,SAAS,EAAE,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAYE;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKJ,KAAK,CAACK,KAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIL,KAAK,CAACM,QAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACE,EAAA,GAAG,EAAC,GADN;AAEE,EAAA,GAAG,EAAC,KAFN;AAGE,EAAA,OAAO,EAAC,KAHV;AAIE,EAAA,GAAG,EAAC,IAJN;AAKE,EAAA,IAAI,EAAC,IALP;AAME,EAAA,KAAK,EAAEN,KAAK,CAACO,YAAN,GAAqB,EAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EASE;AAAG,EAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA2BP,KAAK,CAACO,YAAjC,CATF,CALF,EAgBGN,SAAS,CAACO,MAAV,GAAmB,CAAnB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAvB,GAA4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhB/C,EAiBGP,SAAS,CAACQ,GAAV,CAAc,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC7B,SACE;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAW,IAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,IADX,CADF;AAKD,CANA,CAjBH,EAwBE,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAC,SAAvB;AAAiC,EAAA,IAAI,EAAC,MAAtC;AAA6C,EAAA,IAAI,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBF,CAZF,CARF,CADF;;AAmDAb,SAAS,CAACc,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAEF,SAAS,CAACgB,MADG;AAEpBC,EAAAA,QAAQ,EAAEjB,SAAS,CAACkB;AAFA,CAAtB;AAIA,eAAejB,SAAf","sourcesContent":["import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\nimport FontAwesome from \"react-fontawesome\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieInfo.css\";\nimport PropTypes from \"prop-types\";\n\nconst MovieInfo = ({ movie, directors }) => (\n  <div\n    className=\"rmdb-movieinfo\"\n    style={{\n      background: movie.backdrop_path\n        ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\n        : \"#000\"\n    }}\n  >\n    <div className=\"rmdb-movieinfo-content\">\n      <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n          image={\n            movie.poster_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n              : \"./images/no_image.jpg\"\n          }\n          clickable={false}\n        />\n      </div>\n\n      <div className=\"rmdb-movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n          <meter\n            min=\"0\"\n            max=\"100\"\n            optimum=\"100\"\n            low=\"40\"\n            high=\"70\"\n            value={movie.vote_average * 10}\n          />\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n        </div>\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n        {directors.map((element, i) => {\n          return (\n            <p key={i} className=\"rmdb-director\">\n              {element.name}\n            </p>\n          );\n        })}\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n      </div>\n    </div>\n  </div>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  drectors: PropTypes.array\n};\nexport default MovieInfo;\n"]},"metadata":{},"sourceType":"module"}