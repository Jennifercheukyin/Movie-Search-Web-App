{"ast":null,"code":"var _jsxFileName = \"/Users/zengzhuoran/Desktop/React-RMDB/src/components/Movie/Movie.js\";\nimport React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\nimport { memberExpression } from \"@babel/types\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        console.log(result);\n\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            //fetch actors in the setstate callback function\n            const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"/credits?api_key=\").concat(API_KEY);\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(memebr => memebr.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(error => console.log(\"Error:\", error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); //first fetch the movie, then fetch the actors for that movie\n\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/zengzhuoran/Desktop/React-RMDB/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","memberExpression","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","console","log","status_code","setState","props","match","params","movieId","crew","filter","memebr","job","cast","catch","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;AACA,SAASC,gBAAT,QAAiC,cAAjC;;AAEA,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BW,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,OAAO,EAAE;AAJH,KADoB;;AAAA,SAiB5BC,UAjB4B,GAiBfC,QAAQ,IAAI;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACGE,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACdE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,YAAIA,MAAM,CAACI,WAAX,EAAwB;AACtB,eAAKC,QAAL,CAAc;AAAEV,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD,MAEO;AACL,eAAKU,QAAL,CAAc;AAAEb,YAAAA,KAAK,EAAEQ;AAAT,WAAd,EAAiC,MAAM;AACrC;AACA,kBAAMH,QAAQ,aAAMhB,OAAN,mBACZ,KAAKyB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OADZ,8BAEM3B,OAFN,CAAd;AAGAgB,YAAAA,KAAK,CAACD,QAAD,CAAL,CACGE,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACd,oBAAMN,SAAS,GAAGM,MAAM,CAACU,IAAP,CAAYC,MAAZ,CAChBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UADT,CAAlB;AAGA,mBAAKR,QAAL,CAAc;AACZZ,gBAAAA,MAAM,EAAEO,MAAM,CAACc,IADH;AAEZpB,gBAAAA,SAFY;AAGZC,gBAAAA,OAAO,EAAE;AAHG,eAAd;AAKD,aAXH;AAYD,WAjBD;AAkBD;AACF,OA1BH,EA2BGoB,KA3BH,CA2BSC,KAAK,IAAId,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBa,KAAtB,CA3BlB;AA4BD,KA9C2B;AAAA;;AAQ5BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,QAAL,CAAc;AAAEV,MAAAA,OAAO,EAAE;AAAX,KAAd,EADkB,CAElB;;AACA,UAAME,QAAQ,aAAMhB,OAAN,mBACZ,KAAKyB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OADZ,sBAEF3B,OAFE,oBAAd;AAGA,SAAKc,UAAL,CAAgBC,QAAhB;AACD;;AAgCDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAzD2B;;AA2D9B,eAAe5B,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\nimport { memberExpression } from \"@babel/types\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    //first fetch the movie, then fetch the actors for that movie\n    const endpoint = `${API_URL}movie/${\n      this.props.match.params.movieId\n    }?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        console.log(result);\n        if (result.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: result }, () => {\n            //fetch actors in the setstate callback function\n            const endpoint = `${API_URL}movie/${\n              this.props.match.params.movieId\n            }/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then(result => result.json())\n              .then(result => {\n                const directors = result.crew.filter(\n                  memebr => memebr.job === \"Director\"\n                );\n                this.setState({\n                  actors: result.cast,\n                  directors,\n                  loading: false\n                });\n              });\n          });\n        }\n      })\n      .catch(error => console.log(\"Error:\", error));\n  };\n  render() {\n    return (\n      <div className=\"rmdb-movie\">\n        <Navigation />\n        <MovieInfo />\n        <MovieInfoBar />\n\n        <Spinner />\n      </div>\n    );\n  }\n}\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}