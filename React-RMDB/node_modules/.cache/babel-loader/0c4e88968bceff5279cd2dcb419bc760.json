{"ast":null,"code":"import _objectSpread from \"/Users/zengzhuoran/Desktop/project/React-RMDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/zengzhuoran/Desktop/project/React-RMDB/src/components/Movie/Movie.js\";\nimport React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      // ES6 destructuring the props\n      const movieId = this.props.match.params.movieId;\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          // If we don't find any movie\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            // ... then fetch actors in the setState callback function\n            let endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"/credits?api_key=\").concat(API_KEY);\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors,\n                loading: false\n              }, () => {\n                localStorage.setItem(\"\".concat(movieId), JSON.stringify(this.state));\n              });\n            });\n          });\n        }\n      }).catch(error => console.error(\"Error:\", error));\n    };\n  }\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const movieId = this.props.match.params.movieId;\n\n    if (localStorage.getItem(\"\".concat(movieId))) {\n      let state = JSON.parse(localStorage.getItem(\"\".concat(movieId)));\n      this.setState(_objectSpread({}, state));\n    } else {\n      this.setState({\n        loading: true\n      }); // First fetch the movie ...\n\n      let endpoint = \"\".concat(API_URL, \"movie/\").concat(movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n      this.fetchItems(endpoint);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.movie ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      movie: this.props.location.movieName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      movie: this.state.movie,\n      directors: this.state.directors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      time: this.state.movie.runtime,\n      budget: this.state.movie.budget,\n      revenue: this.state.movie.revenue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })) : null, this.state.actors ? React.createElement(\"div\", {\n      className: \"rmdb-movie-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: \"Actors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.actors.map((element, i) => {\n      return React.createElement(Actor, {\n        key: i,\n        actor: element,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      });\n    }))) : null, !this.state.actors && !this.state.loading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"No Movie Found!\") : null, this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/zengzhuoran/Desktop/project/React-RMDB/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","movieId","props","match","params","fetch","then","result","json","status_code","setState","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","catch","error","console","componentDidMount","getItem","parse","render","location","movieName","runtime","budget","revenue","map","element","i"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,OAAO,EAAE;AAJH,KADoB;;AAAA,SAuB5BC,UAvB4B,GAuBfC,QAAQ,IAAI;AACvB;AADuB,YAEfC,OAFe,GAEH,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAFd,CAEfH,OAFe;AAIvBI,MAAAA,KAAK,CAACL,QAAD,CAAL,CACGM,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACd,YAAIA,MAAM,CAACE,WAAX,EAAwB;AACtB;AACA,eAAKC,QAAL,CAAc;AAAEZ,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAHD,MAGO;AACL,eAAKY,QAAL,CAAc;AAAEf,YAAAA,KAAK,EAAEY;AAAT,WAAd,EAAiC,MAAM;AACrC;AACA,gBAAIP,QAAQ,aAAMf,OAAN,mBAAsBgB,OAAtB,8BAAiDf,OAAjD,CAAZ;AACAmB,YAAAA,KAAK,CAACL,QAAD,CAAL,CACGM,IADH,CACQC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADlB,EAEGF,IAFH,CAEQC,MAAM,IAAI;AACd,oBAAMV,SAAS,GAAGU,MAAM,CAACI,IAAP,CAAYC,MAAZ,CAChBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UADT,CAAlB;AAIA,mBAAKJ,QAAL,CACE;AACEd,gBAAAA,MAAM,EAAEW,MAAM,CAACQ,IADjB;AAEElB,gBAAAA,SAFF;AAGEC,gBAAAA,OAAO,EAAE;AAHX,eADF,EAME,MAAM;AACJkB,gBAAAA,YAAY,CAACC,OAAb,WACKhB,OADL,GAEEiB,IAAI,CAACC,SAAL,CAAe,KAAKzB,KAApB,CAFF;AAID,eAXH;AAaD,aApBH;AAqBD,WAxBD;AAyBD;AACF,OAjCH,EAkCG0B,KAlCH,CAkCSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAlClB;AAmCD,KA9D2B;AAAA;;AAQ5BE,EAAAA,iBAAiB,GAAG;AAClB;AADkB,UAEVtB,OAFU,GAEE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAFnB,CAEVH,OAFU;;AAIlB,QAAIe,YAAY,CAACQ,OAAb,WAAwBvB,OAAxB,EAAJ,EAAwC;AACtC,UAAIP,KAAK,GAAGwB,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACQ,OAAb,WAAwBvB,OAAxB,EAAX,CAAZ;AACA,WAAKS,QAAL,mBAAmBhB,KAAnB;AACD,KAHD,MAGO;AACL,WAAKgB,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAd,EADK,CAEL;;AACA,UAAIE,QAAQ,aAAMf,OAAN,mBAAsBgB,OAAtB,sBAAyCf,OAAzC,oBAAZ;AACA,WAAKa,UAAL,CAAgBC,QAAhB;AACD;AACF;;AA0CD0B,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhC,KAAL,CAAWC,KAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWyB,QAAX,CAAoBC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWC,KADpB;AAEE,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWG,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME,oBAAC,YAAD;AACE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,KAAX,CAAiBkC,OADzB;AAEE,MAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWC,KAAX,CAAiBmC,MAF3B;AAGE,MAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWC,KAAX,CAAiBoC,OAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAaG,IAdN,EAeG,KAAKrC,KAAL,CAAWE,MAAX,GACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWE,MAAX,CAAkBoC,GAAlB,CAAsB,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACrC,aAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,CAAZ;AAAe,QAAA,KAAK,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADH,CADF,CADD,GAQG,IAvBN,EAyBG,CAAC,KAAKvC,KAAL,CAAWE,MAAZ,IAAsB,CAAC,KAAKF,KAAL,CAAWI,OAAlC,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,GAEG,IA3BN,EA6BG,KAAKJ,KAAL,CAAWI,OAAX,GAAqB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,GAAmC,IA7BtC,CADF;AAiCD;;AAjG2B;;AAmG9B,eAAeL,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    if (localStorage.getItem(`${movieId}`)) {\n      let state = JSON.parse(localStorage.getItem(`${movieId}`));\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      // First fetch the movie ...\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n      this.fetchItems(endpoint);\n    }\n  }\n\n  fetchItems = endpoint => {\n    // ES6 destructuring the props\n    const { movieId } = this.props.match.params;\n\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        if (result.status_code) {\n          // If we don't find any movie\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: result }, () => {\n            // ... then fetch actors in the setState callback function\n            let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then(result => result.json())\n              .then(result => {\n                const directors = result.crew.filter(\n                  member => member.job === \"Director\"\n                );\n\n                this.setState(\n                  {\n                    actors: result.cast,\n                    directors,\n                    loading: false\n                  },\n                  () => {\n                    localStorage.setItem(\n                      `${movieId}`,\n                      JSON.stringify(this.state)\n                    );\n                  }\n                );\n              });\n          });\n        }\n      })\n      .catch(error => console.error(\"Error:\", error));\n  };\n  render() {\n    return (\n      <div className=\"rmdb-movie\">\n        {this.state.movie ? (\n          <div>\n            <Navigation movie={this.props.location.movieName} />\n            <MovieInfo\n              movie={this.state.movie}\n              directors={this.state.directors}\n            />\n            <MovieInfoBar\n              time={this.state.movie.runtime}\n              budget={this.state.movie.budget}\n              revenue={this.state.movie.revenue}\n            />\n          </div>\n        ) : null}\n        {this.state.actors ? (\n          <div className=\"rmdb-movie-grid\">\n            <FourColGrid header={\"Actors\"}>\n              {this.state.actors.map((element, i) => {\n                return <Actor key={i} actor={element} />;\n              })}\n            </FourColGrid>\n          </div>\n        ) : null}\n\n        {!this.state.actors && !this.state.loading ? (\n          <h1>No Movie Found!</h1>\n        ) : null}\n\n        {this.state.loading ? <Spinner /> : null}\n      </div>\n    );\n  }\n}\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}